<?php


class fbhandler{
	public $fbId;
	public $action;
	public $exists = 'false';
	public $flag = true;
	public $SID ;
	// public $frnd_list = array() ;

	function __construct($vars){
		$this->SID = $vars['SID'];
		$this->fbId = $vars['fbId'];
		$this->action = $vars['action'];
		$this->publish_post = $vars['publish_post'];
		$this->follow_frnds = $vars['follow_frnds'];
		$this->email_alerts = $vars['email_alerts'];
		$this->frnd_list = explode(",",$vars['frnd_list']);
		$this->email=$vars['email'];
		$this->firstname=$vars['firstname'];
		$this->lastname=$vars['lastname'];
		$this->country=$vars['country'];
		$this->dailtDigest=$vars['dailydigest'];
		$this->pwd=$vars['pwd'];


	}
	function exists(){
		global $_SESSION;
		$qry = "select id from subscription where email='".$this->email."'";
		$result= exec_query($qry,1);
		if($result['id']>0){
			$this->exists = TRUE;
			$this->SID=$result['id'];
			$qryIsFacebook = "select id from fb_user where subscription_id='".$this->SID."'";
			$resultIsFacebook= exec_query($qryIsFacebook,1);
			if(count($resultIsFacebook)<1){
				$this->fbinsert();
			}
		}else{
			if($_SESSION['LoggedIn']){
				$this->fbinsert();
				$this->exists = TRUE;
			}else{
				$this->exists = FALSE;
			}

		}
		return $this->exists;

	}
	function fbinsert(){  // user exist in MV and facebook id not exist
		$this->flag = true;
		$this->exists = 'true';
		$this->publish_post ='1';
		$this->follow_frnds ='1';
		$this->email_alerts ='1';
		$subscription_id = $this->SID;
		set_sess_vars('userFacebookId',$this->fbId);

		if(!$subscription_id){
			$qry="select id from subscription where email='".$email."'";
			$result=exec_query($qry,1);
			$subscription_id =$result['id'];
		}


		if(!$this->flag){
			$this->publish_post ='0';
			$this->follow_frnds ='0';
			$this->email_alerts ='0';
		}

		$fbUserMapping['subscription_id'] = $this->SID;
		$fbUserMapping['fbuser_id'] = $this->fbId;
		$fbUserMapping['publish_post'] = $this->publish_post;
		$fbUserMapping['follow_frnds'] = $this->follow_frnds;
		$fbUserMapping['fb_permission'] = $this->fb_permission;

		$queryInsertFbUser= insert_query('fb_user',$fbUserMapping);

		$updateValueSub['recv_daily_gazette'] = $this->email_alerts;
		$conditionSub['id'] = $this->SID;
		$queryUpdateSub= update_query('subscription',$updateValueSub,$conditionSub);

		//now update users frindlist

/*		if(count($this->frnd_list)){
			$script ='';
			foreach($this->frnd_list as $val){
			   if($val){

					$script = "insert into fb_user_friends(subscription_id,fb_friend_id) values ('".$subscription_id."','".$val."');";
					exec_query($script);
				}
			}
			//$result = exec_query($script);

				// now add new facebook user's frind in exchnage community
				$query = "SELECT fb.subscription_id subscription_id  FROM fb_user_friends fuf,fb_user fb WHERE fuf.subscription_id ='".$subscription_id."' AND fuf.fb_friend_id = fb.fbuser_id";
				$result = exec_query($query, 1);
					if(count($result)){
						foreach ($result as $val){
							$query = "insert into ex_user_friends (subscription_id,friend_subscription_id,date) values('".$subscription_id."','".$val."',sysdate())";
							exec_query($query);
						}
					}
				return 'true';

		}*/
		return 'true';
	}
	function fbupdate(){
		//session_start();
		$subscription_id = $this->SID;
		$query  = "update fb_user set fb_permission ='".$this->fb_permission."' where subscription_id='".$subscription_id."'";
		$result = exec_query($query);
		return 'true';
	}
	function fbchkpublish(){
		$query  = "select publish_post, fb_permission from fb_user where subscription_id = '".$this->SID."'";
		$result = exec_query($query,1);
		if($result['publish_post'] == '1'){
			return 'true';
		}
		return 'false';
	}
	function autologin($fbId, $isRegister){
		$objUser = new user();
		$json = new Services_JSON();
		set_sess_vars('userFacebookId',$this->fbId);
		/*if($_SESSION['SID']){
			return 'true';
		}*/
		// get via id from facebook id
		$strQuery="SELECT S.id AS SID,S.`email`,S.`password` FROM subscription S,fb_user FU
WHERE FU.fbuser_id='".$this->fbId."'
AND S.id=FU.subscription_id ORDER BY S.id DESC";
		$result=exec_query($strQuery,1);
		if(!$result){
			return false;
		}
		else{
			// autologin user basis of his details
				$dataObj = new userData();
				$pass = $dataObj->decryptUserPassword($result['password']);
				$status=$objUser->login($result['email'],$pass);
				if($status){
					$result= array(
						'resultStatus' => true,
						'isRegister' => $isRegister
					);
					$output = $json->encode($result);
					return $output;
					//return true;
				}else{
					return false;
				}
			}
	}

	function getFacebookUserFriendsId($loginid,$friendids){
		$qry="select subscription_id from fb_user where fbuser_id in ($friendids);";
			$getsubid=exec_query($qry);
			foreach($getsubid as $row){
				if($loginid!=$row['subscription_id']){
					$qrycheckfolow="select subscribed_to from ex_blog_subscribed where subscribed_to='".$row['subscription_id']."' and  user_id='".$loginid."'";
					$qryresult=exec_query($qrycheckfolow,1);
					if(!$qryresult['subscribed_to']){
						$subscriptiondata=array(
								subscribed_to=>$row['subscription_id'],
								user_id=>$loginid,
								subscribed_on=>date('Y-m-d H:i:s'),
								subscription_status=>1
								);
							$id=insert_query("ex_blog_subscribed",$subscriptiondata);
					}
				}

			}


	}

	function fbregisteration() {
	global $viaDefaultAddr;
	$json = new Services_JSON();
	$userObj=new user();
	//$viaEmailObj = new ViaEmail();

		// login information
		$loginInfo=array(
			'login'=>$this->email,
			'password'=>$this->pwd
		);

		$addresses=$viaDefaultAddr;
		$objUser = new User();
		// integrate auxilary field
		$account_activated=1; /*set account activation to via- 0,1*/
		$auxInfo=$objUser->setAuxilaryFields($account_activated,$temp_orders="");

		// integrate customer information
		$custInfo=array(
			'loginInfo'=>$loginInfo,
			'addresses'=>$addresses,
			'email'=>$this->uid,
			'nameFirst'=>$this->firstname,
			'nameLast'=>$this->lastname,
			'email'=>$this->email,
			'auxFields'=>$auxInfo
		);
		// cart details with exchange
		$orderDetails=array();

		$orderDetails['OrderItem'][0]['orderClassId']=9;
		$orderDetails['OrderItem'][0]['orderCodeId']=9;
		$orderDetails['OrderItem'][0]['sourceCodeId']=1;
		$orderDetails['OrderItem'][0]['orderItemType']='SUBSCRIPTION';
		$orderDetails['OrderItem'][0]['typeSpecificId']=15;
		$orderDetails['OrderItem'][0]['price']=0;
		$orderDetails['OrderItem'][0]['paymentAccountNumb']=1;
		$orderDetails['OrderItem'][0]['qty']=1;

		$cartDetails=array(
			'billDate'=>date('Y-m-d'),
			'items'=>$orderDetails
		);
		// set user name and password
		$objVia->nameFirst=$this->firstname;
		$objVia->nameLast=$this->lastname;

		// send request to via
		// defined in /lib/_via_data_lib.php
		$hardtrial=1;
		$customerDetails=$objVia->addCustomerAndOrder( $custInfo,$cartDetails,$hardtrial);
		// via responded successfully
		if($customerDetails){
			$via_id=$objVia->customerIdVia;
			// insert record to minyanville db
			// defined in /lib/_via_data_lib.php
			$insertedId=$objVia->insertBasicUser($this->dailydigest);

			RegisterUser($insertedId);

			$qry= "select id from subscription where email='".$this->email."'";
			$rslt= exec_query($qry,1);

			$fbUserMapping['subscription_id'] = $rslt['id'];
			$fbUserMapping['fbuser_id'] = $this->fbId;
			$fbUserMapping['publish_post'] = $this->publish_post;
			$fbUserMapping['follow_frnds'] = $this->follow_frnds;
			$fbUserMapping['fb_permission'] = $this->fb_permission;

			$queryInsertFbUser= insert_query('fb_user',$fbUserMapping);

			/* Insert into ex_user_profile table */
			$subarray = array('subscription_id'=>$insertedId);
			$profileid = insert_query('ex_user_profile', $subarray);
			// login new user to system
			$loginInfo=$userObj->login($this->email,$this->pwd);
				// account created successfully
				$value=array(
					'status'=>true,
					'firstname'=>ucwords($this->firstname),
					'lastname'=>ucwords($this->lastname)
				);
			}

			// minyanville db insertion failed
			else{
				$errorObj=new ViaException();
				// message handling
				//echo "MVIL DB insertion failed";
				$errMessage=$errorObj->getExactCustomError($customerDetails);
				if($errMessage==''){
					$pattern = '/Error:(.*)/';
					preg_match($pattern, $errViaMessage, $matches);
					$errMessage=$matches[1];
				}
				if($errMessage==''){
					$errMessage='An error occurred while processing your request. Please check your data.';
				}

				$value=array(
					'status'=>false,
					'msg'=>$errMessage
				);
			}

		// generate array that can be used with js
		// defined in /lib/json.php
		//$output = $json->encode($value);
		//echo strip_tags($output);
			if($value['status']){
				$viaEmailObj->sendWelcomeEmail($this->firstname,$this->email,$this->pwd);
				return $this->autologin($this->fbId,1);
			}

		}
}
?>